name: look

services:
  traefik:
    image: traefik:v3.3
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entryPoints.websecure.address=:443
      - --entryPoints.websecure.http.tls=true
      - --providers.file.filename=/traefik/dynamic.yml
      - --providers.file.watch=true
      - --log.level=DEBUG
    ports:
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/certs:ro
      - ./traefik.yml:/traefik/dynamic.yml:ro
    restart: always

  backend:
    build:
      context: ../
      dockerfile: deploy/Dockerfile
    env_file:
      - .env
    scale: 2
    labels:
      - traefik.enable=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-backend.rule=Host(`${API_HOST}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-backend.entryPoints=websecure
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: always

  postgres:
    image: postgres:16-alpine
    container_name: ${POSTGRES_HOST}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.3
    environment:
      discovery.type: single-node
      xpack.security.enabled: "true"
      xpack.security.transport.ssl.enabled: "false"
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl -fsSL -u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} ${ELASTIC_HOST}/_cluster/health?wait_for_status=yellow&timeout=5s || exit 1"
      ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  postgres:
  elasticsearch:
