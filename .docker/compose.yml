services:
  look-backend:
    container_name: look-backend
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      BOT_TOKEN: ${BOT_TOKEN}
      LOGFIRE_TOKEN: ${LOGFIRE_TOKEN}
      LOGFIRE_SERVICE_NAME: ${LOGFIRE_SERVICE_NAME}
      LOGFIRE_ENVIRONMENT: ${LOGFIRE_ENVIRONMENT}
      ALLOW_ORIGINS: ${ALLOW_ORIGINS}
    ports:
      - ${API_EXPOSE_PORT}:8000
    volumes:
      - ../keys:/app/keys
    depends_on:
      look-database:
        condition: service_healthy
    networks:
      - look-network
    restart: always

  look-database:
    container_name: ${POSTGRES_HOST}
    ports:
      - ${POSTGRES_EXPOSE_PORT}:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    image: postgres:16-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - look-database:/var/lib/postgresql/data
    networks:
      - look-network
    restart: always

volumes:
  look-database:

networks:
  look-network:
